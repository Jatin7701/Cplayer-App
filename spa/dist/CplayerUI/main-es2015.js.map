{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authentication.service.ts","./src/app/calendar/calendar.component.ts","./src/app/calendar/calendar.component.html","./src/app/contact/contact.component.ts","./src/app/contact/contact.component.html","./src/app/cricapi.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/edituser/edituser.component.ts","./src/app/edituser/edituser.component.html","./src/app/fav.ts","./src/app/favourites.service.ts","./src/app/favs/favs.component.ts","./src/app/favs/favs.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/helper/helper.component.ts","./src/app/helper/helper.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/news/news.component.ts","./src/app/news/news.component.html","./src/app/recom/recom.component.ts","./src/app/recom/recom.component.html","./src/app/recommended.service.ts","./src/app/recommended.ts","./src/app/router.service.ts","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/stat-opener/stat-opener.component.ts","./src/app/stats/stats.component.ts","./src/app/stats/stats.component.html","./src/app/statview/statview.component.ts","./src/app/statview/statview.component.html","./src/app/user.service.ts","./src/app/user.ts","./src/app/userAuth.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { SearchComponent } from './search/search.component';\nimport { StatsComponent } from './stats/stats.component';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { FavsComponent } from './favs/favs.component';\nimport { RecomComponent } from './recom/recom.component';\nimport { EdituserComponent } from './edituser/edituser.component';\nimport { StatOpenerComponent } from './stat-opener/stat-opener.component';\nimport { NewsComponent } from './news/news.component';\nimport { HelperComponent } from './helper/helper.component';\n\n// declaring the routes here\nconst routes: Routes = [\n  // making the login as the default path of the app\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  },\n  //path to load login component\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  // path to load the signup component\n  {\n    path: 'signup',\n    component: SignupComponent\n  },\n  // path to login the dashboard component\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    //once a user logs in he will be directed to login and will be able to access children paths\n    children: [\n      // making search as the default path of dashboard\n      {\n        path: '',\n        redirectTo: 'search',\n        pathMatch: 'full'\n      },\n      // path of search component\n      {\n        path: 'search',\n        component: SearchComponent\n      },\n      // path of stat component\n      {\n        path: 'stats',\n        component: StatsComponent\n      },\n      // path of favourites coomponent\n      {\n        path: 'favs',\n        component: FavsComponent,\n      },\n      {\n        path: 'help',\n        component: HelperComponent,\n      },\n      // path of recommended component\n      {\n        path: 'recom',\n        component: RecomComponent\n      },\n      // path of calendar component\n      {\n        path: 'cal',\n        component: CalendarComponent\n      },\n      // path of edituser component\n      {\n        path: 'edit',\n        component: EdituserComponent\n      },\n      //path of contact(about us) component\n      {\n        path: 'contact',\n        component: ContactComponent\n      },\n      // path for the news component\n      {\n        path: 'news',\n        component : NewsComponent\n      },\n      // path of stats opener with providin the pid of the player clicked\n      {\n        path: 'statOpener/:pid/view',\n        component: StatOpenerComponent,\n        outlet: 'statOpener'\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'CplayerUI';\n  constructor() { }\n \n \n}\n","<!-- router outlet to load login page by default as soon as the app is loaded -->\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatListModule } from '@angular/material/list'\nimport { MatDialogModule } from '@angular/material/dialog'\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatCardModule } from '@angular/material/card';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { SearchComponent } from './search/search.component';\nimport { StatsComponent } from './stats/stats.component';\nimport { FavsComponent } from './favs/favs.component';\nimport { EdituserComponent } from './edituser/edituser.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { RecomComponent } from './recom/recom.component';\nimport { StatOpenerComponent } from './stat-opener/stat-opener.component';\nimport { StatviewComponent } from './statview/statview.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { NewsComponent } from './news/news.component';\nimport { HelperComponent } from './helper/helper.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SearchComponent,\n    StatsComponent,\n    FavsComponent,\n    EdituserComponent,\n    DashboardComponent,\n    CalendarComponent,\n    SignupComponent,\n    ContactComponent,\n    RecomComponent,\n    StatOpenerComponent,\n    StatviewComponent,\n    HeaderComponent,\n    FooterComponent,\n    NewsComponent,\n    HelperComponent,\n  ],\n  imports: [\n    BrowserModule,\n    MatIconModule,\n    LayoutModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    HttpClientModule,\n    MatCardModule,\n    MatListModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatTabsModule,\n    NgxPaginationModule,\n    RouterModule,\n    FormsModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatGridListModule,\n    MatMenuModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents :[StatviewComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { UserAuth } from './userAuth';\nimport { UserService } from './user.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(private httpClient: HttpClient) { }\n  public signup(userauth: UserAuth): Observable<any> {\n    return this.httpClient.post<UserAuth>('http://localhost:8888/api/auth/register', userauth).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n\n  setBearerToken(token: string) {\n    sessionStorage.setItem('token', token);\n  }\n  getBearerToken() {\n    return sessionStorage.getItem('token');\n  }\n  public login(userinfo: UserAuth): Observable<any> {\n    return this.httpClient.post<any>('http://localhost:8888/api/auth/login', userinfo).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n  public deleteUser(username: string, token: string): Observable<any> {\n    return this.httpClient.delete<any>(`http://localhost:8888/api/auth/pro/user?username=${username}`, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n  public updateUser(user: UserAuth, pass: string, token: string): Observable<any> {\n    return this.httpClient.put<any>(`http://localhost:8888/api/auth/pro/user`,{\"username\":`${user.username}`,\"oldpass\":`${user.password}`,\"newpass\":`${pass}`} ,{\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { CricapiService } from '../cricapi.service';\nimport { RouterService } from '../router.service';\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.css']\n})\nexport class CalendarComponent implements OnInit {\n\n  //taking an array\n  public status: boolean;\n  public array: any[] = [];\n\n  config: any;\n\n  //dependency injection of Services\n  constructor(private breakpointObserver: BreakpointObserver,\n    private cric: CricapiService, private route :RouterService) {\n    // paginantion\n    this.config = {\n      itemsPerPage: 12,\n      currentPage: 1,\n      totalItems: this.array.length\n    };\n\n  }\n\n//recording the change of page\npageChanged(event) {\n  this.config.currentPage = event;\n}\n\nngOnInit(): void {\n\n  if (sessionStorage.getItem('token') == null || sessionStorage.getItem('username') == null) {\n    this.route.tologin();\n  }\n\n  var i: number = 0;\n\n  // load the upcoming match list on initiation from cric api\n  this.cric.matchcalendar().subscribe(\n    data => {\n      this.array = data.matches;\n    },\n    err => console.log(err)\n  )\n}\n}\n","<!-- Show the details of upcoming match -->\n\n<div class=\"cardContainer\">\n\n   <mat-card class=\"card\" *ngFor=\"let data of array | paginate: config\">\n     <mat-card-header>\n       <mat-card-title>\n         {{data[\"team-1\"]}} vs {{data[\"team-2\"]}}\n       </mat-card-title>\n     </mat-card-header>\n     <mat-card-subtitle>\n       Date :  {{data.date}}\n     </mat-card-subtitle>\n\n     <mat-card-content>\n      Format : {{data.type}}\n     </mat-card-content>\n   </mat-card>\n \n </div>\n <div class=\"pagination\">\n   <pagination-controls (pageChange)=\"pageChanged($event)\"></pagination-controls>\n </div>","import { Component, OnInit } from '@angular/core';\nimport { RouterService } from '../router.service';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor(private route: RouterService) { }\n\n  ngOnInit(): void {\n\n    if (sessionStorage.getItem('token') == null || sessionStorage.getItem('username') == null) {\n      this.route.tologin();\n    }\n\n  }\n\n}\n","<!-- Showing info of development team -->\n\n<div class=\"cardContainer\">\n   <mat-card class=\"card\">\n      <mat-card-title>Samidha Gurav</mat-card-title>\n      <!-- <mat-card-subtitle></mat-card-subtitle> -->\n      <img mat-card-image height=\"350px\" src=\"../../assets/DSC_0049.jpg\">\n      <mat-card-content><b>Application Developer</b><br>RedHat Cloud Microservices</mat-card-content>\n   </mat-card>\n\n   <mat-card class=\"card\">\n      <mat-card-title>Sahas Bansal</mat-card-title>\n      <mat-card-subtitle>IBM</mat-card-subtitle>\n      <img mat-card-image height=\"350px\" src=\"../../assets/pritesh.jpg\">\n      <mat-card-content><b>Applictaion Developer</b><br>RedHat Cloud Microservices</mat-card-content>\n   </mat-card>\n\n   <mat-card class=\"card\">\n      <mat-card-title>Baleegh Haider</mat-card-title>\n      <mat-card-subtitle>IBM</mat-card-subtitle>\n      <img mat-card-image height=\"350px\" src=\"../../assets/arbaj.JPG\">\n      <mat-card-content><b>Application Developer</b><br>IBM Cloud Microservices</mat-card-content>\n   </mat-card>\n\n   <!--<mat-card class=\"card\">\n      <mat-card-title>Regati Guruteja</mat-card-title>\n      <mat-card-subtitle>IBM</mat-card-subtitle>\n      <img mat-card-image height=\"350px\" src=\"../../assets/rega.jpg\">\n      <mat-card-content><b>Application Developer</b><br>IBM Cloud Microservices</mat-card-content>\n   </mat-card> -->\n</div>","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, retry } from 'rxjs/operators';\nimport { Favs } from './fav';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CricapiService {\n\n  constructor(private http: HttpClient) {\n\n   }\n\n  apikey: string = \"ab27dbb7-815a-446f-90e6-08a4dfd2f6fc\";\n  searchPlayer(name: string): Observable<any> {\n    return this.http.get(`https://api.cricapi.com/v1/players?apikey=${this.apikey}`, {\n      params: new HttpParams().set(\"search\", name)\n    });\n  }\n\n  statsPlayer(pid: any): Observable<any> {\n    return this.http.get(`https://api.cricapi.com/v1/players_info?apikey=${this.apikey}`, {\n      params: new HttpParams().set(\"id\", pid)\n    })\n  }\n  \n    matchcalendar(): Observable<any> {\n    return this.http.get<any>(`https://api.cricapi.com/v1/matches?apikey=${this.apikey}`)\n  }\n  newsSports():Observable<any>{\n    return this.http.get<any>('http://newsapi.org/v2/top-headlines?country=in&category=sports&apiKey=144d87b6f02944989fc3e65deaae19a6')\n  }\n\n  pickPlayerStatsResults(response) {\n    return response;\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { RouterService } from '../router.service';\nimport { AuthenticationService } from '../authentication.service';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit{\n\n  user: User = new User();\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, private route: RouterService,\n     private auth : AuthenticationService, private userser :UserService) {}\n  ngOnInit(): void {\n\n    if (sessionStorage.getItem('token') == null || sessionStorage.getItem('username') == null) {\n      this.route.tologin();\n    }\n    var name:string = sessionStorage.getItem('username');\n    var token:string = sessionStorage.getItem('token');    \n    this.userser.getdetails(name,token).subscribe(\n      res => this.user=res,\n      err => {\n        sessionStorage.clear();\n        this.route.tologin();\n      }\n    )\n  }\n\n  logout(){\n    sessionStorage.clear();\n    this.route.tologin();\n  }\n\n}\n","<!-- Contains header and footer and a router outlet and works as the parent of the other components -->\n\n<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <button mat-icon-button>\n      <mat-icon (click)=\"sidenav.toggle()\">menu</mat-icon>\n    </button>\n    <div class=\"heading\">Cricket Player</div>\n    <div class=\"top\">\n      <a mat-button routerLink=\"search\">Search </a>\n      <a mat-button routerLink=\"favs\">Favourites </a>\n      <a mat-button routerLink=\"recom\">Recommended </a>\n      <a mat-button routerLink=\"stats\">Statistics </a>\n      <!-- <a mat-button routerLink=\"cal\">Calendar</a> -->\n      <a mat-button routerLink=\"news\">News</a>\n      <a mat-button routerLink=\"contact\"> Contact Us </a>\n    </div>\n    <div class=\"dropdown\">\n      <img class=\"img\" src={{user.image}} width=\"55\" height=\"55\">\n      <div class=\"dropdown-content\">\n        <a class=\"drop\" mat-button routerLink=\"edit\"> Edit Profile </a><br>\n        <a class=\"drop\" mat-button (click)=\"logout()\"> Log Out </a>\n      </div>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n\n<mat-sidenav-container>\n  <mat-sidenav #sidenav>\n    <mat-nav-list class=\"side\">\n      <a mat-list-item routerLink=\"search\"> Search </a>\n      <a mat-list-item routerLink=\"favs\"> Favourites </a>\n      <a mat-list-item routerLink=\"recom\"> Recommended </a>\n      <a mat-list-item routerLink=\"stats\"> Statistics </a>\n      <a mat-list-item routerLink=\"cal\"> Calendar </a>\n      <a mat-button routerLink=\"news\">News</a>\n      <a mat-list-item routerLink=\"contact\"> Contact Us </a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <div style=\"height: 88vh;\">\n\n      <router-outlet></router-outlet>\n      <router-outlet name='statOpener'></router-outlet>\n\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n\n<mat-toolbar class=\"foot\" color=\"primary\">\n  <mat-toolbar-row>\n    <div class=\"foot-text\">Follow us on : </div>\n    <a href=\"https://www.facebook.com/\" target=\"_blank\"><img class=\"icons\" src=\"../../assets/fb.png\"></a>\n    <a href=\"https://www.instagram.com/\" target=\"_blank\"><img class=\"icons\" src=\"../../assets/insta.png\"></a>\n    <a href=\"https://www.linkedin.com/\" target=\"_blank\"><img class=\"icons\" src=\"../../assets/linkedin.png\"></a>\n    <a href=\"https://www.twitter.com/\" target=\"_blank\"><img class=\"icons\" src=\"../../assets/twitter.png\"></a>\n    <div class=\"copy\">@Copyrights 2022 CPlayer-Team StackRoute. All rights reserved</div>\n  </mat-toolbar-row>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { User } from '../user';\nimport { UserAuth } from '../userAuth';\nimport { AuthenticationService } from '../authentication.service';\nimport { UserService } from '../user.service';\nimport { RouterService } from '../router.service';\nimport { FavouritesService } from '../favourites.service';\n\n@Component({\n  selector: 'app-edituser',\n  templateUrl: './edituser.component.html',\n  styleUrls: ['./edituser.component.css']\n})\nexport class EdituserComponent implements OnInit {\n\n  token: string;\n  nam: string;\n  val: string;\n  user: User = new User();\n  userauth: UserAuth = new UserAuth();\n\n  constructor(private route: RouterService, private userser: UserService,\n     private auth: AuthenticationService, private favser : FavouritesService) { }\n\n  ngOnInit(): void {\n\n    if (sessionStorage.getItem('token') == null || sessionStorage.getItem('username') == null) {\n      this.route.tologin();\n    }\n\n    this.nam = sessionStorage.getItem('username');\n    this.token = sessionStorage.getItem('token');\n\n    this.userser.getdetails(this.nam, this.token).subscribe(\n      res => this.user = res,\n      err => console.log()\n    )\n  }\n\n  mobileForm = new FormGroup({\n    mobile: new FormControl('', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]),\n  })\n  passwordForm = new FormGroup({\n    oldPassword: new FormControl('', [Validators.required, Validators.minLength(8)]),\n    newPassword: new FormControl('', [Validators.required, Validators.minLength(8)]),\n  })\n\n  get mobile() {\n    return this.mobileForm.get('mobile');\n  }\n  get oldPassword() {\n    return this.passwordForm.get('oldPassword');\n  }\n  get newPassword() {\n    return this.passwordForm.get('newPassword');\n  }\n\n  img: string;\n  onFileChanged(event) {\n    const file = event.target.files[0];\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = (_event => {\n      this.img = reader.result.toString();\n    })\n  }\n  image() {\n    this.user.image = this.img;\n    console.log();\n    this.userser.modifyUser(this.user, this.token).subscribe(\n      res => console.log(),\n      err => {\n        if (err.statusText === \"OK\") {\n          console.log(\"success\");\n          this.route.back();\n        }\n      }\n    )\n  }\n  mobiles() {\n    this.user.mobile = this.mobileForm.value.mobile;\n    console.log();\n    console.log();\n\n    this.userser.modifyUser(this.user, this.token).subscribe(\n      res => console.log(),\n      err => {\n        if (err.statusText === \"OK\") {\n          console.log(\"success\");\n          this.route.back();\n        }\n      }\n    )\n  }\n  password() {\n    this.userauth.password = this.passwordForm.value.oldPassword;\n    this.userauth.username = this.nam;\n    console.log();\n    console.log();\n    this.auth.updateUser(this.userauth, this.passwordForm.value.newPassword, this.token).subscribe(\n      res => console.log(),\n      err => {\n        if (err.statusText === \"OK\") {\n          sessionStorage.clear();\n          this.route.tologin();\n        }\n      }\n    )\n  }\n  deleteUser(val){\n    this.userser.deleteUser(sessionStorage.getItem('username'),sessionStorage.getItem('token')).subscribe();\n    this.auth.deleteUser(sessionStorage.getItem('username'),sessionStorage.getItem('token')).subscribe();\n    this.favser.deleteData(sessionStorage.getItem('username'),sessionStorage.getItem('token')).subscribe();\n    sessionStorage.clear();\n    this.route.tologin();\n  }\n\n}\n","<!-- \n   Edit User Component \n   \n   A user can edit his 3 information and delete the account also :\n      1. update mobile number\n      2. update profile picture\n      3. set new password\n -->\n\n<mat-tab-group>\n\n   <mat-tab class=\"main\" label=\"Mobile Update\">\n      <div class=\"headers\">Change Your Mobile Number</div>\n      <form [formGroup]=\"mobileForm\" (ngSubmit)=\"mobiles()\">\n         <div>\n            <label for=\"mobile\">Mobile</label>\n            <input class=\"mobile\" type=\"text\" placeholder=\"  Enter your mobile\" formControlName=\"mobile\"><br>\n            <small class=\"err\" *ngIf=\"mobile.invalid && (mobile.dirty || mobile.touched)\">\n               Enter a valid 10 digit Mobile Number\n            </small>\n         </div>\n         <div class=\"but\">\n            <button value=\"update\">Update</button>\n         </div>\n      </form>\n   </mat-tab>\n\n   <mat-tab class=\"main\" label=\"Image Update\">\n      <div class=\"headers\">Change you Profile Picture</div>\n      <form (ngSubmit)=\"image()\">\n         <div class=\"image-upload-container btn btn-bwm\">\n            <label>Image</label>\n            <input #imageInput class=\"image\" type=\"file\" (change)=\"onFileChanged($event)\">\n         </div>\n         <div class=\"but\">\n            <button value=\"update\">Update</button>\n         </div>\n      </form>\n   </mat-tab>\n\n   <mat-tab class=\"main\" label=\"Password Update\">\n      <div class=\"headers\">Change Your Password</div>\n      <form [formGroup]=\"passwordForm\" (ngSubmit)=\"password()\">\n         <div>\n            <label for=\"oldPassword\">Old Password</label>\n            <input class=\"password\" type=\"password\" placeholder=\"  Enter old password\"\n               formControlName=\"oldPassword\"><br>\n            <small *ngIf=\"oldPassword.invalid && (oldPassword.dirty || oldPassword.touched)\">\n               <small class=\"err\" *ngIf=\"oldPassword.errors.required\">\n                  Password cannot be left blank\n               </small>\n               <small class=\"err\" *ngIf=\"oldPassword.errors.minlength\">\n                  Password must have minimum 8characters\n               </small>\n            </small>\n         </div>\n\n         <div>\n            <label for=\"newPassord\">New Password</label>\n            <input class=\"password\" type=\"password\" placeholder=\"  Enter new password\"\n               formControlName=\"newPassword\"><br>\n            <small *ngIf=\"newPassword.invalid && (newPassword.dirty || newPassword.touched)\">\n               <small class=\"err\" *ngIf=\"newPassword.errors.required\">\n                  Password cannot be left blank\n               </small>\n               <small class=\"err\" *ngIf=\"newPassword.errors.minlength\">\n                  Password must have minimum 8characters\n               </small>\n            </small>\n         </div>\n\n         <div class=\"but\">\n            <button value=\"update\">Update</button>\n         </div>\n      </form>\n   </mat-tab>\n\n   <mat-tab class=\"main\" label=\"Delete Account\">\n      <div class=\"delpa\">\n         <div class=\"formTaker-Expansion\">\n            <mat-form-field appearance=\"outline\">\n               <mat-label>Delete Account</mat-label>\n               <input matInput placeholder=\"Please enter password\" [(ngModel)]=\"val\">\n               <mat-hint>We have new features coming</mat-hint>\n            </mat-form-field>\n\n            <button mat-raised-button (click)=\"deleteUser(val)\" class=\"buttn\" color=\"primary\">Delete</button>\n         </div>\n      </div>\n   </mat-tab>\n\n</mat-tab-group>","export class Favs {\n   username: any;\n   id:any;\n   pid: any;\n   country: string;\n   name: string;\n   role: string;\n   placeOfBirth: string;\n   dateOfBirth: string;\n   playerImg: string;\n   status: Boolean;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Favs } from './fav';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FavouritesService {\n  constructor(private http: HttpClient) { }\n  getData(usern: String, token: string): Observable<any> {\n    return this.http.get<any>(`http://localhost:8888/api/fav?username=${usern}`, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n  addData(fav: Favs, token: string): Observable<any> {\n    return this.http.post<any>(`http://localhost:8888/api/fav`, fav, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n  deleteData(usern: string, token: string): Observable<any> {\n    return this.http.delete<any>(`http://localhost:8888/api/fav?username=${usern}`, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n  deleteDataUser(usern: string, name: string, token: string): Observable<any> {\n    return this.http.post<any>(`http://localhost:8888/api/fav/id`, { \"username\": `${usern}`, \"name\": `${name}` }, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FavouritesService } from '../favourites.service';\nimport { Favs } from '../fav';\nimport { RecommendedService } from '../recommended.service';\nimport { Recommended } from '../recommended';\nimport { CricapiService } from '../cricapi.service';\nimport { RouterService } from '../router.service';\n\n@Component({\n  selector: 'app-favs',\n  templateUrl: './favs.component.html',\n  styleUrls: ['./favs.component.css']\n})\nexport class FavsComponent implements OnInit {\n\n  list : Array<Favs>;\n  fav: Favs;\n  recom: Recommended\n  constructor(private favser : FavouritesService, private recomser : RecommendedService, private cricapi : CricapiService, private route: RouterService) { }\n  ngOnInit(): void {\n    this.favser.getData(sessionStorage.getItem('username'),sessionStorage.getItem('token')).subscribe(\n      res => {\n        this.list = res;\n      },\n      err => console.log(err)\n    )    \n  }\n  removeFromFav(data){\n    data.status = true;\n    this.recomser.deleteData(data.id, sessionStorage.getItem('token')).subscribe(\n      res => this.favser.deleteDataUser(sessionStorage.getItem('username'), data.id, sessionStorage.getItem('token')).subscribe(\n        res => console.log(),\n        err => console.log(err)\n      ),\n      err => {\n        if (err.statusText === \"OK\") {\n          this.favser.deleteDataUser(sessionStorage.getItem('username'), data.name, sessionStorage.getItem('token')).subscribe(\n            res => this.route.tohelp(),\n            err => console.log(err)\n          )\n        }\n      }\n    )\n  }\n\n}\n","<!-- display all the favourite players and have a button in each card to delete them -->\n\n<div class=\"cardContainer\">\n\n   <mat-card class=\"card\" *ngFor=\"let data of list\">\n\n      <mat-card-title>\n         {{data.name}}\n      </mat-card-title>\n\n      <mat-card-subtitle>\n         {{data.dateOfBirth}}\n      </mat-card-subtitle>\n\n      <img mat-card-image height=\"250px\" [src]=\"data.playerImg\">\n\n      <mat-card-content>\n         <b>Conutry :</b> {{data.country}}<br>\n         <b>Teams : </b>{{data.placeOfBirth}}<br>\n         <b>Role : </b>{{data.role}}\n      </mat-card-content>\n\n      <mat-card-actions>\n         <button *ngIf=\"data.status\" mat-icon-button class=\"button-pos\">\n            <mat-icon>favorite</mat-icon>\n         </button>\n\n         <button *ngIf=\"!data.status\" mat-icon-button color=\"warn\" class=\"button-pos\" (click)=\"removeFromFav(data)\">\n            <mat-icon>favorite</mat-icon>\n         </button>\n      </mat-card-actions>\n   </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"foot\" color=\"primary\">\n   <mat-toolbar-row>\n       <div class=\"foot-text\">Follow us on : </div>\n       <a href=\"https://www.facebook.com/\"><img class=\"icons\" src=\"../../assets/fb.png\"></a>\n       <a href=\"https://www.instagram.com/\"><img class=\"icons\" src=\"../../assets/insta.png\"></a>\n       <a href=\"https://www.linkedin.com/\"><img class=\"icons\" src=\"../../assets/linkedin.png\"></a>\n       <a href=\"https://www.twitter.com/\"><img class=\"icons\" src=\"../../assets/twitter.png\"></a>\n       <div class=\"copy\">@Copyrights 2022 CPlayer-Team StackRoute. All rights reserved</div>\n   </mat-toolbar-row>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n   <mat-toolbar-row>\n       <div class=\"heading\">Cricket Player</div>\n       <span class=\"menu-spacer\"></span>\n   </mat-toolbar-row>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\nimport { RouterService } from '../router.service';\n\n@Component({\n  selector: 'app-helper',\n  templateUrl: './helper.component.html',\n  styleUrls: ['./helper.component.css']\n})\nexport class HelperComponent implements OnInit {\n\n  constructor(private route: RouterService) { }\n\n  ngOnInit(): void {\n    this.route.back();\n  }\n\n}\n","<p>helper works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { RouterService } from '../router.service';\nimport { AuthenticationService } from '../authentication.service';\nimport { UserAuth } from '../userAuth';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  userAuth: UserAuth = new UserAuth();\n  loginflag: boolean;\n  constructor (private route: RouterService, private auth: AuthenticationService) {  }\n  ngOnInit(): void {\n    if (sessionStorage.getItem('token') != null) {\n      this.loginflag = true;\n      this.route.todashboard();\n    }\n  }\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required, Validators.minLength(8)])\n  })\n  get email() {\n    return this.loginForm.get('email');\n  }\n\n  get password() {\n    return this.loginForm.get('password');\n  }\n  logIn() {\n    this.userAuth.username = this.loginForm.value.email;\n    this.userAuth.password = this.loginForm.value.password;\n\n    this.auth.login(this.userAuth).subscribe(\n      data => {\n        this.auth.setBearerToken(data[\"Token\"]);\n        sessionStorage.setItem(\"username\", this.loginForm.value.email);\n        this.route.todashboard();\n      },\n      error => {\n        console.log(error);\n      });\n  }\n  tosignup() {\n    this.route.tosignup();\n  }\n\n}","<!-- Login form -->\n\n<app-header></app-header>\n\n<div class=\"login\"> Login Form</div>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"logIn()\">\n    <div>\n        <label for=\"email\">Email</label>\n        <input type=\"text\" placeholder=\"Enter Email\" formControlName=\"email\">\n        <small class=\"esmall\" *ngIf=\"email.invalid && (email.dirty || email.touched)\">\n            email is mandatory field\n        </small>\n    </div>\n    <div>\n        <label for=\"password\">Password</label>\n        <input type=\"password\" placeholder=\"Enter Password\" formControlName=\"password\">\n        <small *ngIf=\"password.invalid && (password.dirty || password.touched)\">\n            <small *ngIf=\"password.errors.required\">\n                password cannot be left blank\n            </small>\n            <small *ngIf=\"password.errors.minlength\">\n                password must have minimum 8characters\n            </small>\n        </small>\n    </div>\n\n    <div class=\"but\">\n        <button [disabled]=\"!loginForm.valid\" value=\"sign In\">Log In</button>\n        <!--input class=\"submit\"[disabled} = \"!loginForm.valid\" value=\"signIn\"-->\n        <button (click)=\"tosignup()\" value=\"signIn\">New User</button>\n    </div>\n</form>\n\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { RouterService } from '../router.service';\nimport { CricapiService } from '../cricapi.service';\n\n@Component({\n  selector: 'app-news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.css']\n})\nexport class NewsComponent implements OnInit {\n\n  list: Array<any>;\n\n  constructor(private route: RouterService, private newsapi: CricapiService) { }\n\n  ngOnInit(): void {\n\n    if (sessionStorage.getItem('token') == null || sessionStorage.getItem('username') == null) {\n      this.route.tologin();\n    }\n\n    this.newsapi.newsSports().subscribe(\n      res => {\n        this.list=res.articles        \n      },\n      err => console.log(err)\n    )\n\n\n  }\n\n\n\n}\n","<div class=\"cardContainer\">\n\n   <mat-card class=\"card\" *ngFor=\"let data of list\">\n\n      <mat-card-title>\n         {{data.title}}\n      </mat-card-title><br>\n\n      <a href=\"{{data.url}}\" target=\"_blank\">\n         <img width=\"500px\" mat-card-image height=\"250px\" [src]=\"data.urlToImage\">\n      </a>\n\n      <mat-card-subtitle>\n         {{data.description}}\n      </mat-card-subtitle>\n\n      <mat-card-content>\n         {{data.content}}\n      </mat-card-content>\n\n   </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { RecommendedService } from '../recommended.service';\nimport { RouterService } from '../router.service';\n\n@Component({\n  selector: 'app-recom',\n  templateUrl: './recom.component.html',\n  styleUrls: ['./recom.component.css']\n})\nexport class RecomComponent implements OnInit {\n  list: Array<any>;\n  constructor(private recomser: RecommendedService, private route: RouterService) { }\n  ngOnInit(): void {\n    if (sessionStorage.getItem('token') == null || sessionStorage.getItem('username') == null) {\n      this.route.tologin();\n    }\n    this.recomser.getData(sessionStorage.getItem('token')).subscribe(\n      res => this.list = res\n    )\n  }\n\n}\n","<!-- Show the cards of recommended players -->\n\n<div class=\"cardContainer\">\n\n   <mat-card class=\"card\" *ngFor=\"let data of list\">\n\n      <mat-card-title>\n         {{data.name}}\n      </mat-card-title>\n\n      <mat-card-subtitle>\n         {{data.dateOfBirth}}\n      </mat-card-subtitle>\n\n      <img mat-card-image height=\"250px\" [src]=\"data.playerImg\">\n\n      <mat-card-content>\n         <b>Conutry :</b> {{data.country}}<br>\n         <b>Teams : </b>{{data.placeOfBirth}}<br>\n         <b>Role : </b>{{data.role}}\n      </mat-card-content>\n   </mat-card>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Recommended } from './recommended';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecommendedService {\n  constructor(private http: HttpClient) { }\n  getData(token: string): Observable<any> {\n    return this.http.get<any>(`http://localhost:8888/api/recom`, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          console.log(userData);\n          return userData;\n        }));\n  }\n  addData(recom: Recommended, token: string): Observable<any> {\n    return this.http.post<any>(`http://localhost:8888/api/recom`, recom, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n  deleteData(pid: number, token: string): Observable<any> {\n    return this.http.delete<any>(`http://localhost:8888/api/recom?id=${pid}`, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n\n}\n","export class Recommended {\n   role: string;\n   country: string;\n   name: string;\n   placeOfBirth: string;\n   dateOfBirth: string;\n   playerImg: string;\n   pid: string;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouterService {\n  constructor(private router: Router, private location: Location) { }\n  tologin(){\n    this.router.navigate([\"/login\"])\n  }\n  tosignup(){\n    this.router.navigate([\"/signup\"])\n  }\n  todashboard(){\n    this.router.navigate([\"/dashboard\"])\n  }\n  tocontact(){\n    this.router.navigate([\"/contact\"])\n  }\n  tofav(){\n    this.router.navigate([\"/dashboard/favs\"])\n  }\n\n  tohelp(){\n    this.router.navigate([\"/dashboard/help\"])\n  }\n  tostatOpener(pid){\n    this.router.navigate(['dashboard',{\n      outlets:{\n        statOpener:['statOpener',pid,'view']\n      }\n    }])\n  }\n  back(){\n    this.location.back();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CricapiService } from '../cricapi.service';\nimport { Find } from '../find';\nimport { FavouritesService } from '../favourites.service';\nimport { Favs } from '../fav';\nimport { Recommended } from '../recommended';\nimport { RecommendedService } from '../recommended.service';\nimport { RouterService } from '../router.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n  stat: boolean;\n  config: any;\n  val: string;\n  fav: Favs = new Favs;\n  fav2: Favs;\n  recom: Recommended = new Recommended;\n  Id;\n  list: Array<Find> = [];\n  constructor(private cricapi: CricapiService, private favser: FavouritesService,\n    private recomser: RecommendedService, private route: RouterService) {\n    this.val = \"\";\n    this.config = {\n      itemsPerPage: 10,\n      currentPage: 1,\n      totalItems: this.list.length\n    };\n\n  }\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n  ngOnInit() {\n    if (sessionStorage.getItem('token') == null || sessionStorage.getItem('username') == null) {\n      this.route.tologin();\n    }\n\n  }\n  getData(val) {\n    this.cricapi.searchPlayer(val).subscribe(\n      res => {\n        this.list = res.data;\n        for (let obj of this.list) {\n          obj.status = true;\n        }\n      },\n      err => {\n        console.log(err)\n      })\n  }\n  onView(id) {\n    this.Id = id;\n    sessionStorage.setItem('fId', this.Id);\n  }\n  addToFav(data) {\n    data.status = false;\n    this.cricapi.statsPlayer(sessionStorage.getItem('fId')).subscribe(\n      (res: any) => {\n        this.fav.dateOfBirth = (res['data']['dateOfBirth']);\n        this.fav.name = res['data']['name'];\n        this.fav.placeOfBirth = res['data']['placeOfBirth'];\n        this.fav.playerImg = res['data']['playerImg'];\n        this.fav.role = res['data']['role'];\n        this.fav.status = false;\n        this.fav.country = res['data']['country'];\n        this.fav.username = sessionStorage.getItem('username');\n        this.fav.pid = (sessionStorage.getItem('fId'));\n        this.recom.dateOfBirth = (res['data']['dateOfBirth']);\n        this.recom.name = res['data']['name'];\n        this.recom.placeOfBirth = res['data']['placeOfBirth'];\n        this.recom.playerImg = res['data']['playerImg'];\n        this.recom.role = res['data']['role'];\n        this.recom.country = res['data']['country'];\n        this.recom.pid = (sessionStorage.getItem('fId'));\n\n\n        this.recomser.addData(this.recom, sessionStorage.getItem('token')).subscribe(\n          res => console.log(\"added to recom\"),\n          err => console.log(err)\n        )\n        this.favser.addData(this.fav, sessionStorage.getItem('token')).subscribe(\n          res => console.log(\"added to fav\"),\n          err => console.log(err)\n        )\n      },\n      err => console.log(err)\n    )\n  }\n  removeFromFav(data) {\n    data.status = true;\n    this.recomser.deleteData(data.pid, sessionStorage.getItem('token')).subscribe(\n      res => console.log(\"removed from fav\"),\n      err => console.log(err)\n    )\n    this.favser.deleteDataUser(sessionStorage.getItem('username'), data.name, sessionStorage.getItem('token')).subscribe(\n      res => console.log(\"removed from recom\"),\n      err => console.log(err)\n    )\n  }\n\n}\n","<!-- creating search button ad get a list of players -->\n\n<div class=\"formTaker-Expansion\">\n   <mat-form-field appearance=\"outline\">\n      <mat-label>Search Player</mat-label>\n      <input matInput placeholder=\"Please enter Name\" [(ngModel)]=\"val\">\n      <mat-hint>eg. Sachin</mat-hint>\n   </mat-form-field>\n\n   <button mat-raised-button (click)=\"getData(val)\" class=\"buttn\" color=\"primary\">Search</button>\n</div>\n\n<div class=\"cardContainer\">\n\n   <mat-card class=\"card\" style=\"background: linear-gradient(\n      rgba(255, 255, 255, 0.8), \n      rgba(255, 255, 255, 0.7)\n    ),url('../../assets/doodul.png')\" *ngFor=\"let data of list | paginate: config\">\n\n      <mat-card-title>\n         {{data.name}}\n      </mat-card-title>\n      <mat-card-subtitle>\n         Country : {{data.country}}\n      </mat-card-subtitle>\n      <!-- <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\"> -->\n      <!-- style=\"background-image: url('../../assets/doodul.png');\" -->\n\n      <mat-card-content>\n        <!-- <p> Country : {{data.country}}</p> <br> -->\n         <mat-divider style=\"width: 80%; margin-left: 10%;\"></mat-divider>\n         <p> <small  style=\"margin-top:1px; margin-bottom: 0px;\"> ID : {{data.id}}</small> </p>\n      </mat-card-content>\n\n      <mat-card-actions>\n         <button *ngIf=\"data.status\" mat-icon-button class=\"button-pos\" (click)=\"addToFav(data);onView(data.id)\">\n           <mat-icon>favorite</mat-icon>\n         </button>\n         <!-- <button *ngIf=\"data.status\" mat-icon-button class=\"button-pos\" (click)=\"onView(data.id)\">\n            <mat-icon>home</mat-icon>\n          </button> -->\n         <button *ngIf=\"!data.status\" mat-icon-button color=\"warn\" class=\"button-pos\"\n           (click)=\"removeFromFav(data)\">\n           <mat-icon>favorite</mat-icon>\n         </button>\n       </mat-card-actions>\n   </mat-card>\n</div>\n\n<div class=\"pagination\">\n   <pagination-controls (pageChange)=\"pageChanged($event)\"></pagination-controls>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { RouterService } from '../router.service';\nimport { User } from '../user';\nimport { UserAuth } from '../userAuth';\nimport { UserService } from '../user.service';\nimport { AuthenticationService } from '../authentication.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  user: User = new User();\n  userauth: UserAuth = new UserAuth();\n  constructor(private route: RouterService, private userser: UserService, private auth: AuthenticationService) {\n  }\n\n  ngOnInit(): void {\n  }\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required, Validators.minLength(8)]),\n    name: new FormControl('', [Validators.required]),\n    mobile: new FormControl('', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]),\n  })\n\n  get email() {\n    return this.loginForm.get('email');\n  }\n  get password() {\n    return this.loginForm.get('password');\n  }\n  get name() {\n    return this.loginForm.get('name');\n  }\n  get mobile() {\n    return this.loginForm.get('mobile');\n  }\n\n  signIn() {\n    this.user.mobile = this.loginForm.value.mobile;\n    this.user.username = this.loginForm.value.email;\n    this.user.name = this.loginForm.value.name;\n    this.userauth.username = this.loginForm.value.email;\n    this.userauth.password = this.loginForm.value.password;\n    this.auth.signup(this.userauth).subscribe(\n      res => console.log(),\n      err => console.log(err)\n    )\n    this.userser.signup(this.user).subscribe(\n      res => console.log(),\n      err=> console.log(err) \n    )\n    this.route.tologin();  \n  }\n  tologin() {\n    this.route.tologin();\n  }  \n  onFileChanged(event) {\n    const file = event.target.files[0];\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = (_event => {\n      this.user.image = reader.result.toString();\n    })\n  }\n}\n","<!-- Sign Up form -->\n\n<app-header></app-header>\n\n<div class=\"signup\">Sign Up Form</div>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"signIn()\">\n   <div>\n      <label for=\"email\">Email</label>\n      <input class=\"email\" type=\"text\" placeholder=\"  Enter email\" formControlName=\"email\"><br>\n      <small class=\"err\" *ngIf=\"email.invalid && (email.dirty || email.touched)\">\n         Email is mandatory field\n      </small>\n   </div>\n   <div>\n      <label for=\"password\">Password</label>\n      <input class=\"password\" type=\"password\" placeholder=\"  Enter password\" formControlName=\"password\"><br>\n      <small *ngIf=\"password.invalid && (password.dirty || password.touched)\">\n         <small class=\"err\" *ngIf=\"password.errors.required\">\n            Password cannot be left blank\n         </small>\n         <small class=\"err\" *ngIf=\"password.errors.minlength\">\n            Password must have minimum 8characters\n         </small>\n      </small>\n   </div>\n   <div>\n      <label for=\"name\">Name</label>\n      <input class=\"name\" type=\"text\" placeholder=\"  Enter your name\" formControlName=\"name\"><br>\n      <small class=\"err\" *ngIf=\"name.invalid && (name.dirty || name.touched)\">\n         Name is mandatory field\n      </small>\n   </div>\n   <div>\n      <label for=\"mobile\">Mobile</label>\n      <input class=\"mobile\" type=\"text\" placeholder=\"  Enter your mobile\" formControlName=\"mobile\"><br>\n      <small class=\"err\" *ngIf=\"mobile.invalid && (mobile.dirty || mobile.touched)\">\n         Enter a valid 10 digit Mobile Number\n      </small>\n   </div>\n\n   <div class=\"image-upload-container btn btn-bwm\">\n      <label>Image</label>\n      <input #imageInput class=\"image\" type=\"file\" (change)=\"onFileChanged($event)\">\n   </div>\n\n   <div class=\"but\">\n      <button [disabled]=\"!loginForm.valid\" value=\"sign Up\">Sign Up</button>\n      <!--input class=\"submit\"[disabled} = \"!loginForm.valid\" value=\"signIn\"-->\n      <button (click)=\"tologin()\" value=\"log In\">Already Registered</button>\n   </div>\n</form>\n\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { RouterService } from '../router.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { StatviewComponent } from '../statview/statview.component';\n\n@Component({\n  selector: 'app-stat-opener',\n  templateUrl: './stat-opener.component.html',\n  styleUrls: ['./stat-opener.component.css']\n})\nexport class StatOpenerComponent implements OnInit {\n  constructor(private dialogue: MatDialog, private route: RouterService, private actiRoute: ActivatedRoute) {\n    const id = +this.actiRoute.snapshot.paramMap.get('pid');\n    this.dialogue.open(StatviewComponent, {\n      data: {\n        pid: id\n      }\n    }).afterClosed().subscribe(\n      result => {\n        this.route.back();\n      }\n    )\n  }\n\n  ngOnInit(): void {\n\n    if (sessionStorage.getItem('token') == null || sessionStorage.getItem('username') == null) {\n      this.route.tologin();\n    }\n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Find } from '../find';\nimport { CricapiService } from '../cricapi.service';\nimport { RouterService } from '../router.service';\n\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.css']\n})\nexport class StatsComponent implements OnInit {\n  config: any;\n  val: string;\n  list: Array<Find> = [];\n  Id;\n\n\n  constructor(private cricapi: CricapiService, private route: RouterService) {\n    this.val = \"\";\n    this.config = {\n      itemsPerPage: 10,\n      currentPage: 1,\n      totalItems: this.list.length\n    };\n\n  }\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n  ngOnInit() {\n    if (sessionStorage.getItem('token') == null || sessionStorage.getItem('username') == null) {\n      this.route.tologin();\n    }\n  }\n  onView(id) {\n    this.Id = id;\n    sessionStorage.setItem('pId', this.Id);\n  }\n  getData(val) {\n    this.cricapi.searchPlayer(val).subscribe(\n      res => {\n        this.list = res.data;\n        for (let obj of this.list) {\n          obj.status = true;\n        }\n      },\n      err => {\n        console.log(err);\n\n\n      })\n  }\n\n \n\n  viewStats(data) {\n    this.route.tostatOpener(data.pid);\n  }\n\n}\n","<!-- Showing the search result of players as searched by name -->\n\n<div class=\"formTaker-Expansion\">\n   <mat-form-field appearance=\"outline\">\n      <mat-label>Get Statistics</mat-label>\n      <input matInput placeholder=\"Enter Name of Player\" [(ngModel)]=\"val\">\n      <mat-hint>eg. Sachin</mat-hint>\n   </mat-form-field>\n\n   <button mat-raised-button (click)=\"getData(val)\" class=\"buttn\" color=\"primary\">Search</button>\n</div>\n\n<div class=\"cardContainer\">\n\n   <!-- <mat-card class=\"card\" *ngFor=\"let data of list | paginate: config\" (click)=\"viewStats(data)\">\n\n      <mat-card-subtitle>\n         Country : {{data.country}}\n      </mat-card-subtitle>\n<img mat-card-image src=\"{{data.playerImg}}\" alt=\"Photo of a Shiba Inu\">\n     \n      <mat-card-content>\n         Date of Birth : {{data [0]['dateOfBirth']}} <br> <mat-divider></mat-divider>\n         Place of Birth : {{data [0]['placeOfBirth']}} <br> <mat-divider></mat-divider>\n         Country : {{data[0]['country']}} <br> <mat-divider></mat-divider>\n         Date of Birth : {{data.dateOfBirth}} <br> <mat-divider></mat-divider>\n\n         Role : {{data[0]['role']}}<br> <mat-divider></mat-divider>\n <mat-divider style=\"width: 80%; margin-left: 10%;\"></mat-divider>\n         <p> <small  style=\"margin-top:1px; margin-bottom: 0px;\"> ID : {{data.id}}</small> </p>\n\n      </mat-card-content>\n   \n     \n\n   </mat-card>\n</div> -->\n\n\n\n\n<mat-card class=\"card\" style=\"background: linear-gradient(\n      rgba(255, 255, 255, 0.8), \n      rgba(255, 255, 255, 0.7)\n    ),url('../../assets/doodul.png')\" *ngFor=\"let data of list | paginate: config\">\n\n      <mat-card-title>\n         {{data.name}}\n      </mat-card-title>\n      <mat-card-subtitle>\n         Country : {{data.country}}\n      </mat-card-subtitle>\n      <!-- <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\"> -->\n      <!-- style=\"background-image: url('../../assets/doodul.png');\" -->\n\n      <mat-card-content>\n        <!-- <p> Country : {{data.country}}</p> <br> -->\n         <mat-divider style=\"width: 80%; margin-left: 10%;\"></mat-divider>\n         <p> <small  style=\"margin-top:1px; margin-bottom: 0px;\"> ID : {{data.id}}</small> </p>\n      </mat-card-content>\n\n      <mat-card-actions>\n        \n         <!-- <button *ngIf=\"data.status\" mat-icon-button class=\"button-pos\" (click)=\"onView(data.id)\"> -->\n            <button *ngIf=\"data.status\" mat-icon-button class=\"button-pos\" (click)=\"onView(data.id); viewStats(data)\">\n\n            <mat-icon>home</mat-icon>\n          </button>\n        \n       </mat-card-actions>\n   </mat-card>\n</div>\n\n\n\n\n\n<div class=\"pagination\">\n   <pagination-controls (pageChange)=\"pageChanged($event)\"></pagination-controls>\n</div>\n\n<script>console.log(this.list.role)</script>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { StatOpenerComponent } from '../stat-opener/stat-opener.component';\nimport { CricapiService } from '../cricapi.service';\nimport { RouterService } from '../router.service';\nimport { Find } from '../find';\nimport { Favs } from '../fav';\n\n@Component({\n  selector: 'app-statview',\n  templateUrl: './statview.component.html',\n  styleUrls: ['./statview.component.css']\n})\nexport class StatviewComponent implements OnInit {\n  stat :any;\n  constructor(private diaRef: MatDialogRef<StatOpenerComponent>, @Inject(MAT_DIALOG_DATA) private data: any,\n   private cric: CricapiService, private route :RouterService) { \n   }\n\n  ngOnInit(): void {\n\n    if (sessionStorage.getItem('token') == null || sessionStorage.getItem('username') == null) {\n      this.route.tologin();\n    }\n    console.log(\"Call the Cric Player ApI based on PID to get player stats.\");\n    this.cric.statsPlayer(sessionStorage.getItem('pId')).subscribe(\n      res => {\n        this.stat = res['data']\n      },\n      err => console.log(err)\n    )\n  }\n\n}\n","<div class=\"\" style=\"text-align:center\">\n   <img height=\"200px\" src={{stat.playerImg}}>\n   <h1><b>{{stat.name}}</b> </h1>\n</div>\n<div></div>\n<div class=\"\">\n   <h3 class=\"age\"> <b> Date of Birth :</b> {{(stat.dateOfBirth).slice(0,10)}}</h3>\n   <h3><b>Born :</b> {{stat.placeOfBirth}}</h3>\n   <h3><b>Country :</b> {{stat.country}}</h3>\n   <h3><b>Role :</b> {{stat.role}}</h3>\n   <h3><b>Batting Style :</b> {{stat.battingStyle}}</h3>\n   <h3><b>Bowling Style :</b> {{stat.bowlingStyle}}</h3>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { RouterService } from './router.service';\nimport { User } from './user';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private httpClient: HttpClient) { }\n  public signup(user: User) {\n    return this.httpClient.post<User>(\"http://localhost:8888/api/user\", user)\n  }\n  public getdetails(username: string, token: string): Observable<any> {\n    return this.httpClient.get<any>(`http://localhost:8888/api/user/pro/token?username=${username}`, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n  public modifyUser(user: User, token: string): Observable<any> {\n    return this.httpClient.put<any>(`http://localhost:8888/api/user/pro/token?username=${user.username}`, user, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n\n  public deleteUser(username: string, token: string): Observable<any> {\n    return this.httpClient.delete<any>(`http://localhost:8888/api/user/pro/token?username=${username}`, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n\n}","export class User{\n   username: string;\n   password : string;\n   name: string;\n   image: string;\n   mobile: string;\n }\n","export class UserAuth{\n   username: string;\n   password: string;\n}\n","export const environment = {\n  production: false\n};","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}