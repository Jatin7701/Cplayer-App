{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authentication.service.ts","webpack:///src/app/calendar/calendar.component.ts","webpack:///src/app/calendar/calendar.component.html","webpack:///src/app/contact/contact.component.ts","webpack:///src/app/contact/contact.component.html","webpack:///src/app/cricapi.service.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/edituser/edituser.component.ts","webpack:///src/app/edituser/edituser.component.html","webpack:///src/app/fav.ts","webpack:///src/app/favourites.service.ts","webpack:///src/app/favs/favs.component.ts","webpack:///src/app/favs/favs.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/helper/helper.component.ts","webpack:///src/app/helper/helper.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/news/news.component.ts","webpack:///src/app/news/news.component.html","webpack:///src/app/recom/recom.component.ts","webpack:///src/app/recom/recom.component.html","webpack:///src/app/recommended.service.ts","webpack:///src/app/recommended.ts","webpack:///src/app/router.service.ts","webpack:///src/app/search/search.component.ts","webpack:///src/app/search/search.component.html","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/app/stat-opener/stat-opener.component.ts","webpack:///src/app/stats/stats.component.ts","webpack:///src/app/stats/stats.component.html","webpack:///src/app/statview/statview.component.ts","webpack:///src/app/statview/statview.component.html","webpack:///src/app/user.service.ts","webpack:///src/app/user.ts","webpack:///src/app/userAuth.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","children","outlet","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","entryComponents","AuthenticationService","httpClient","userauth","post","pipe","userData","token","sessionStorage","setItem","getItem","userinfo","username","headers","set","user","pass","put","password","providedIn","CalendarComponent","breakpointObserver","cric","route","array","config","itemsPerPage","currentPage","totalItems","length","event","tologin","i","matchcalendar","subscribe","data","matches","err","console","log","pageChanged","ContactComponent","CricapiService","http","apikey","name","get","params","pid","response","DashboardComponent","auth","userser","isHandset$","observe","Handset","result","getdetails","res","clear","logout","EdituserComponent","favser","mobileForm","mobile","required","minLength","maxLength","passwordForm","oldPassword","newPassword","nam","file","target","files","reader","FileReader","readAsDataURL","onload","_event","img","toString","image","modifyUser","statusText","back","value","updateUser","val","deleteUser","deleteData","mobiles","onFileChanged","Favs","FavouritesService","usern","fav","FavsComponent","recomser","cricapi","getData","list","status","deleteDataUser","tohelp","FooterComponent","HeaderComponent","HelperComponent","LoginComponent","userAuth","loginForm","email","loginflag","todashboard","login","setBearerToken","error","tosignup","logIn","NewsComponent","newsapi","newsSports","articles","RecomComponent","RecommendedService","recom","Recommended","RouterService","router","location","navigate","outlets","statOpener","SearchComponent","searchPlayer","obj","Id","statsPlayer","dateOfBirth","placeOfBirth","playerImg","role","country","addData","SignupComponent","signup","signIn","StatOpenerComponent","dialogue","actiRoute","snapshot","paramMap","open","afterClosed","StatsComponent","tostatOpener","StatviewComponent","diaRef","stat","UserService","User","UserAuth","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { SearchComponent } from './search/search.component';\nimport { StatsComponent } from './stats/stats.component';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { FavsComponent } from './favs/favs.component';\nimport { RecomComponent } from './recom/recom.component';\nimport { EdituserComponent } from './edituser/edituser.component';\nimport { StatOpenerComponent } from './stat-opener/stat-opener.component';\nimport { NewsComponent } from './news/news.component';\nimport { HelperComponent } from './helper/helper.component';\n\n// declaring the routes here\nconst routes: Routes = [\n  // making the login as the default path of the app\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  },\n  //path to load login component\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  // path to load the signup component\n  {\n    path: 'signup',\n    component: SignupComponent\n  },\n  // path to login the dashboard component\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    //once a user logs in he will be directed to login and will be able to access children paths\n    children: [\n      // making search as the default path of dashboard\n      {\n        path: '',\n        redirectTo: 'search',\n        pathMatch: 'full'\n      },\n      // path of search component\n      {\n        path: 'search',\n        component: SearchComponent\n      },\n      // path of stat component\n      {\n        path: 'stats',\n        component: StatsComponent\n      },\n      // path of favourites coomponent\n      {\n        path: 'favs',\n        component: FavsComponent,\n      },\n      {\n        path: 'help',\n        component: HelperComponent,\n      },\n      // path of recommended component\n      {\n        path: 'recom',\n        component: RecomComponent\n      },\n      // path of calendar component\n      {\n        path: 'cal',\n        component: CalendarComponent\n      },\n      // path of edituser component\n      {\n        path: 'edit',\n        component: EdituserComponent\n      },\n      //path of contact(about us) component\n      {\n        path: 'contact',\n        component: ContactComponent\n      },\n      // path for the news component\n      {\n        path: 'news',\n        component : NewsComponent\n      },\n      // path of stats opener with providin the pid of the player clicked\n      {\n        path: 'statOpener/:pid/view',\n        component: StatOpenerComponent,\n        outlet: 'statOpener'\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'CplayerUI';\n  constructor() { }\n \n \n}\n","<!-- router outlet to load login page by default as soon as the app is loaded -->\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatListModule } from '@angular/material/list'\nimport { MatDialogModule } from '@angular/material/dialog'\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatCardModule } from '@angular/material/card';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { SearchComponent } from './search/search.component';\nimport { StatsComponent } from './stats/stats.component';\nimport { FavsComponent } from './favs/favs.component';\nimport { EdituserComponent } from './edituser/edituser.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { RecomComponent } from './recom/recom.component';\nimport { StatOpenerComponent } from './stat-opener/stat-opener.component';\nimport { StatviewComponent } from './statview/statview.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { NewsComponent } from './news/news.component';\nimport { HelperComponent } from './helper/helper.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SearchComponent,\n    StatsComponent,\n    FavsComponent,\n    EdituserComponent,\n    DashboardComponent,\n    CalendarComponent,\n    SignupComponent,\n    ContactComponent,\n    RecomComponent,\n    StatOpenerComponent,\n    StatviewComponent,\n    HeaderComponent,\n    FooterComponent,\n    NewsComponent,\n    HelperComponent,\n  ],\n  imports: [\n    BrowserModule,\n    MatIconModule,\n    LayoutModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    HttpClientModule,\n    MatCardModule,\n    MatListModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatTabsModule,\n    NgxPaginationModule,\n    RouterModule,\n    FormsModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatGridListModule,\n    MatMenuModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents :[StatviewComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { UserAuth } from './userAuth';\nimport { UserService } from './user.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(private httpClient: HttpClient) { }\n  public signup(userauth: UserAuth): Observable<any> {\n    return this.httpClient.post<UserAuth>('http://localhost:8888/api/auth/register', userauth).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n\n  setBearerToken(token: string) {\n    sessionStorage.setItem('token', token);\n  }\n  getBearerToken() {\n    return sessionStorage.getItem('token');\n  }\n  public login(userinfo: UserAuth): Observable<any> {\n    return this.httpClient.post<any>('http://localhost:8888/api/auth/login', userinfo).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n  public deleteUser(username: string, token: string): Observable<any> {\n    return this.httpClient.delete<any>(`http://localhost:8888/api/auth/pro/user?username=${username}`, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n  public updateUser(user: UserAuth, pass: string, token: string): Observable<any> {\n    return this.httpClient.put<any>(`http://localhost:8888/api/auth/pro/user`,{\"username\":`${user.username}`,\"oldpass\":`${user.password}`,\"newpass\":`${pass}`} ,{\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { CricapiService } from '../cricapi.service';\nimport { RouterService } from '../router.service';\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.css']\n})\nexport class CalendarComponent implements OnInit {\n\n  //taking an array\n  public status: boolean;\n  public array: any[] = [];\n\n  config: any;\n\n  //dependency injection of Services\n  constructor(private breakpointObserver: BreakpointObserver,\n    private cric: CricapiService, private route :RouterService) {\n    // paginantion\n    this.config = {\n      itemsPerPage: 12,\n      currentPage: 1,\n      totalItems: this.array.length\n    };\n\n  }\n\n//recording the change of page\npageChanged(event) {\n  this.config.currentPage = event;\n}\n\nngOnInit(): void {\n\n  if (sessionStorage.getItem('token') == null || sessionStorage.getItem('username') == null) {\n    this.route.tologin();\n  }\n\n  var i: number = 0;\n\n  // load the upcoming match list on initiation from cric api\n  this.cric.matchcalendar().subscribe(\n    data => {\n      this.array = data.matches;\n    },\n    err => console.log(err)\n  )\n}\n}\n","<!-- Show the details of upcoming match -->\n\n<div class=\"cardContainer\">\n\n   <mat-card class=\"card\" *ngFor=\"let data of array | paginate: config\">\n     <mat-card-header>\n       <mat-card-title>\n         {{data[\"team-1\"]}} vs {{data[\"team-2\"]}}\n       </mat-card-title>\n     </mat-card-header>\n     <mat-card-subtitle>\n       Date :  {{data.date}}\n     </mat-card-subtitle>\n\n     <mat-card-content>\n      Format : {{data.type}}\n     </mat-card-content>\n   </mat-card>\n \n </div>\n <div class=\"pagination\">\n   <pagination-controls (pageChange)=\"pageChanged($event)\"></pagination-controls>\n </div>","import { Component, OnInit } from '@angular/core';\nimport { RouterService } from '../router.service';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor(private route: RouterService) { }\n\n  ngOnInit(): void {\n\n    if (sessionStorage.getItem('token') == null || sessionStorage.getItem('username') == null) {\n      this.route.tologin();\n    }\n\n  }\n\n}\n","<!-- Showing info of development team -->\n\n<div class=\"cardContainer\">\n   <mat-card class=\"card\">\n      <mat-card-title>Samidha Gurav</mat-card-title>\n      <!-- <mat-card-subtitle></mat-card-subtitle> -->\n      <img mat-card-image height=\"350px\" src=\"../../assets/DSC_0049.jpg\">\n      <mat-card-content><b>Application Developer</b><br>RedHat Cloud Microservices</mat-card-content>\n   </mat-card>\n\n   <mat-card class=\"card\">\n      <mat-card-title>Sahas Bansal</mat-card-title>\n      <mat-card-subtitle>IBM</mat-card-subtitle>\n      <img mat-card-image height=\"350px\" src=\"../../assets/pritesh.jpg\">\n      <mat-card-content><b>Applictaion Developer</b><br>RedHat Cloud Microservices</mat-card-content>\n   </mat-card>\n\n   <mat-card class=\"card\">\n      <mat-card-title>Baleegh Haider</mat-card-title>\n      <mat-card-subtitle>IBM</mat-card-subtitle>\n      <img mat-card-image height=\"350px\" src=\"../../assets/arbaj.JPG\">\n      <mat-card-content><b>Application Developer</b><br>IBM Cloud Microservices</mat-card-content>\n   </mat-card>\n\n   <!--<mat-card class=\"card\">\n      <mat-card-title>Regati Guruteja</mat-card-title>\n      <mat-card-subtitle>IBM</mat-card-subtitle>\n      <img mat-card-image height=\"350px\" src=\"../../assets/rega.jpg\">\n      <mat-card-content><b>Application Developer</b><br>IBM Cloud Microservices</mat-card-content>\n   </mat-card> -->\n</div>","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, retry } from 'rxjs/operators';\nimport { Favs } from './fav';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CricapiService {\n\n  constructor(private http: HttpClient) {\n\n   }\n\n  apikey: string = \"ab27dbb7-815a-446f-90e6-08a4dfd2f6fc\";\n  searchPlayer(name: string): Observable<any> {\n    return this.http.get(`https://api.cricapi.com/v1/players?apikey=${this.apikey}`, {\n      params: new HttpParams().set(\"search\", name)\n    });\n  }\n\n  statsPlayer(pid: any): Observable<any> {\n    return this.http.get(`https://api.cricapi.com/v1/players_info?apikey=${this.apikey}`, {\n      params: new HttpParams().set(\"id\", pid)\n    })\n  }\n  \n    matchcalendar(): Observable<any> {\n    return this.http.get<any>(`https://api.cricapi.com/v1/matches?apikey=${this.apikey}`)\n  }\n  newsSports():Observable<any>{\n    return this.http.get<any>('http://newsapi.org/v2/top-headlines?country=in&category=sports&apiKey=144d87b6f02944989fc3e65deaae19a6')\n  }\n\n  pickPlayerStatsResults(response) {\n    return response;\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { RouterService } from '../router.service';\nimport { AuthenticationService } from '../authentication.service';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit{\n\n  user: User = new User();\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, private route: RouterService,\n     private auth : AuthenticationService, private userser :UserService) {}\n  ngOnInit(): void {\n\n    if (sessionStorage.getItem('token') == null || sessionStorage.getItem('username') == null) {\n      this.route.tologin();\n    }\n    var name:string = sessionStorage.getItem('username');\n    var token:string = sessionStorage.getItem('token');    \n    this.userser.getdetails(name,token).subscribe(\n      res => this.user=res,\n      err => {\n        sessionStorage.clear();\n        this.route.tologin();\n      }\n    )\n  }\n\n  logout(){\n    sessionStorage.clear();\n    this.route.tologin();\n  }\n\n}\n","<!-- Contains header and footer and a router outlet and works as the parent of the other components -->\n\n<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <button mat-icon-button>\n      <mat-icon (click)=\"sidenav.toggle()\">menu</mat-icon>\n    </button>\n    <div class=\"heading\">Cricket Player</div>\n    <div class=\"top\">\n      <a mat-button routerLink=\"search\">Search </a>\n      <a mat-button routerLink=\"favs\">Favourites </a>\n      <a mat-button routerLink=\"recom\">Recommended </a>\n      <a mat-button routerLink=\"stats\">Statistics </a>\n      <!-- <a mat-button routerLink=\"cal\">Calendar</a> -->\n      <a mat-button routerLink=\"news\">News</a>\n      <a mat-button routerLink=\"contact\"> Contact Us </a>\n    </div>\n    <div class=\"dropdown\">\n      <img class=\"img\" src={{user.image}} width=\"55\" height=\"55\">\n      <div class=\"dropdown-content\">\n        <a class=\"drop\" mat-button routerLink=\"edit\"> Edit Profile </a><br>\n        <a class=\"drop\" mat-button (click)=\"logout()\"> Log Out </a>\n      </div>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n\n<mat-sidenav-container>\n  <mat-sidenav #sidenav>\n    <mat-nav-list class=\"side\">\n      <a mat-list-item routerLink=\"search\"> Search </a>\n      <a mat-list-item routerLink=\"favs\"> Favourites </a>\n      <a mat-list-item routerLink=\"recom\"> Recommended </a>\n      <a mat-list-item routerLink=\"stats\"> Statistics </a>\n      <a mat-list-item routerLink=\"cal\"> Calendar </a>\n      <a mat-button routerLink=\"news\">News</a>\n      <a mat-list-item routerLink=\"contact\"> Contact Us </a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <div style=\"height: 88vh;\">\n\n      <router-outlet></router-outlet>\n      <router-outlet name='statOpener'></router-outlet>\n\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n\n<mat-toolbar class=\"foot\" color=\"primary\">\n  <mat-toolbar-row>\n    <div class=\"foot-text\">Follow us on : </div>\n    <a href=\"https://www.facebook.com/\" target=\"_blank\"><img class=\"icons\" src=\"../../assets/fb.png\"></a>\n    <a href=\"https://www.instagram.com/\" target=\"_blank\"><img class=\"icons\" src=\"../../assets/insta.png\"></a>\n    <a href=\"https://www.linkedin.com/\" target=\"_blank\"><img class=\"icons\" src=\"../../assets/linkedin.png\"></a>\n    <a href=\"https://www.twitter.com/\" target=\"_blank\"><img class=\"icons\" src=\"../../assets/twitter.png\"></a>\n    <div class=\"copy\">@Copyrights 2022 CPlayer-Team StackRoute. All rights reserved</div>\n  </mat-toolbar-row>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { User } from '../user';\nimport { UserAuth } from '../userAuth';\nimport { AuthenticationService } from '../authentication.service';\nimport { UserService } from '../user.service';\nimport { RouterService } from '../router.service';\nimport { FavouritesService } from '../favourites.service';\n\n@Component({\n  selector: 'app-edituser',\n  templateUrl: './edituser.component.html',\n  styleUrls: ['./edituser.component.css']\n})\nexport class EdituserComponent implements OnInit {\n\n  token: string;\n  nam: string;\n  val: string;\n  user: User = new User();\n  userauth: UserAuth = new UserAuth();\n\n  constructor(private route: RouterService, private userser: UserService,\n     private auth: AuthenticationService, private favser : FavouritesService) { }\n\n  ngOnInit(): void {\n\n    if (sessionStorage.getItem('token') == null || sessionStorage.getItem('username') == null) {\n      this.route.tologin();\n    }\n\n    this.nam = sessionStorage.getItem('username');\n    this.token = sessionStorage.getItem('token');\n\n    this.userser.getdetails(this.nam, this.token).subscribe(\n      res => this.user = res,\n      err => console.log()\n    )\n  }\n\n  mobileForm = new FormGroup({\n    mobile: new FormControl('', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]),\n  })\n  passwordForm = new FormGroup({\n    oldPassword: new FormControl('', [Validators.required, Validators.minLength(8)]),\n    newPassword: new FormControl('', [Validators.required, Validators.minLength(8)]),\n  })\n\n  get mobile() {\n    return this.mobileForm.get('mobile');\n  }\n  get oldPassword() {\n    return this.passwordForm.get('oldPassword');\n  }\n  get newPassword() {\n    return this.passwordForm.get('newPassword');\n  }\n\n  img: string;\n  onFileChanged(event) {\n    const file = event.target.files[0];\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = (_event => {\n      this.img = reader.result.toString();\n    })\n  }\n  image() {\n    this.user.image = this.img;\n    console.log();\n    this.userser.modifyUser(this.user, this.token).subscribe(\n      res => console.log(),\n      err => {\n        if (err.statusText === \"OK\") {\n          console.log(\"success\");\n          this.route.back();\n        }\n      }\n    )\n  }\n  mobiles() {\n    this.user.mobile = this.mobileForm.value.mobile;\n    console.log();\n    console.log();\n\n    this.userser.modifyUser(this.user, this.token).subscribe(\n      res => console.log(),\n      err => {\n        if (err.statusText === \"OK\") {\n          console.log(\"success\");\n          this.route.back();\n        }\n      }\n    )\n  }\n  password() {\n    this.userauth.password = this.passwordForm.value.oldPassword;\n    this.userauth.username = this.nam;\n    console.log();\n    console.log();\n    this.auth.updateUser(this.userauth, this.passwordForm.value.newPassword, this.token).subscribe(\n      res => console.log(),\n      err => {\n        if (err.statusText === \"OK\") {\n          sessionStorage.clear();\n          this.route.tologin();\n        }\n      }\n    )\n  }\n  deleteUser(val){\n    this.userser.deleteUser(sessionStorage.getItem('username'),sessionStorage.getItem('token')).subscribe();\n    this.auth.deleteUser(sessionStorage.getItem('username'),sessionStorage.getItem('token')).subscribe();\n    this.favser.deleteData(sessionStorage.getItem('username'),sessionStorage.getItem('token')).subscribe();\n    sessionStorage.clear();\n    this.route.tologin();\n  }\n\n}\n","<!-- \n   Edit User Component \n   \n   A user can edit his 3 information and delete the account also :\n      1. update mobile number\n      2. update profile picture\n      3. set new password\n -->\n\n<mat-tab-group>\n\n   <mat-tab class=\"main\" label=\"Mobile Update\">\n      <div class=\"headers\">Change Your Mobile Number</div>\n      <form [formGroup]=\"mobileForm\" (ngSubmit)=\"mobiles()\">\n         <div>\n            <label for=\"mobile\">Mobile</label>\n            <input class=\"mobile\" type=\"text\" placeholder=\"  Enter your mobile\" formControlName=\"mobile\"><br>\n            <small class=\"err\" *ngIf=\"mobile.invalid && (mobile.dirty || mobile.touched)\">\n               Enter a valid 10 digit Mobile Number\n            </small>\n         </div>\n         <div class=\"but\">\n            <button value=\"update\">Update</button>\n         </div>\n      </form>\n   </mat-tab>\n\n   <mat-tab class=\"main\" label=\"Image Update\">\n      <div class=\"headers\">Change you Profile Picture</div>\n      <form (ngSubmit)=\"image()\">\n         <div class=\"image-upload-container btn btn-bwm\">\n            <label>Image</label>\n            <input #imageInput class=\"image\" type=\"file\" (change)=\"onFileChanged($event)\">\n         </div>\n         <div class=\"but\">\n            <button value=\"update\">Update</button>\n         </div>\n      </form>\n   </mat-tab>\n\n   <mat-tab class=\"main\" label=\"Password Update\">\n      <div class=\"headers\">Change Your Password</div>\n      <form [formGroup]=\"passwordForm\" (ngSubmit)=\"password()\">\n         <div>\n            <label for=\"oldPassword\">Old Password</label>\n            <input class=\"password\" type=\"password\" placeholder=\"  Enter old password\"\n               formControlName=\"oldPassword\"><br>\n            <small *ngIf=\"oldPassword.invalid && (oldPassword.dirty || oldPassword.touched)\">\n               <small class=\"err\" *ngIf=\"oldPassword.errors.required\">\n                  Password cannot be left blank\n               </small>\n               <small class=\"err\" *ngIf=\"oldPassword.errors.minlength\">\n                  Password must have minimum 8characters\n               </small>\n            </small>\n         </div>\n\n         <div>\n            <label for=\"newPassord\">New Password</label>\n            <input class=\"password\" type=\"password\" placeholder=\"  Enter new password\"\n               formControlName=\"newPassword\"><br>\n            <small *ngIf=\"newPassword.invalid && (newPassword.dirty || newPassword.touched)\">\n               <small class=\"err\" *ngIf=\"newPassword.errors.required\">\n                  Password cannot be left blank\n               </small>\n               <small class=\"err\" *ngIf=\"newPassword.errors.minlength\">\n                  Password must have minimum 8characters\n               </small>\n            </small>\n         </div>\n\n         <div class=\"but\">\n            <button value=\"update\">Update</button>\n         </div>\n      </form>\n   </mat-tab>\n\n   <mat-tab class=\"main\" label=\"Delete Account\">\n      <div class=\"delpa\">\n         <div class=\"formTaker-Expansion\">\n            <mat-form-field appearance=\"outline\">\n               <mat-label>Delete Account</mat-label>\n               <input matInput placeholder=\"Please enter password\" [(ngModel)]=\"val\">\n               <mat-hint>We have new features coming</mat-hint>\n            </mat-form-field>\n\n            <button mat-raised-button (click)=\"deleteUser(val)\" class=\"buttn\" color=\"primary\">Delete</button>\n         </div>\n      </div>\n   </mat-tab>\n\n</mat-tab-group>","export class Favs {\n   username: any;\n   id:any;\n   pid: any;\n   country: string;\n   name: string;\n   role: string;\n   placeOfBirth: string;\n   dateOfBirth: string;\n   playerImg: string;\n   status: Boolean;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Favs } from './fav';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FavouritesService {\n  constructor(private http: HttpClient) { }\n  getData(usern: String, token: string): Observable<any> {\n    return this.http.get<any>(`http://localhost:8888/api/fav?username=${usern}`, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n  addData(fav: Favs, token: string): Observable<any> {\n    return this.http.post<any>(`http://localhost:8888/api/fav`, fav, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n  deleteData(usern: string, token: string): Observable<any> {\n    return this.http.delete<any>(`http://localhost:8888/api/fav?username=${usern}`, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n  deleteDataUser(usern: string, name: string, token: string): Observable<any> {\n    return this.http.post<any>(`http://localhost:8888/api/fav/id`, { \"username\": `${usern}`, \"name\": `${name}` }, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FavouritesService } from '../favourites.service';\nimport { Favs } from '../fav';\nimport { RecommendedService } from '../recommended.service';\nimport { Recommended } from '../recommended';\nimport { CricapiService } from '../cricapi.service';\nimport { RouterService } from '../router.service';\n\n@Component({\n  selector: 'app-favs',\n  templateUrl: './favs.component.html',\n  styleUrls: ['./favs.component.css']\n})\nexport class FavsComponent implements OnInit {\n\n  list : Array<Favs>;\n  fav: Favs;\n  recom: Recommended\n  constructor(private favser : FavouritesService, private recomser : RecommendedService, private cricapi : CricapiService, private route: RouterService) { }\n  ngOnInit(): void {\n    this.favser.getData(sessionStorage.getItem('username'),sessionStorage.getItem('token')).subscribe(\n      res => {\n        this.list = res;\n      },\n      err => console.log(err)\n    )    \n  }\n  removeFromFav(data){\n    data.status = true;\n    this.recomser.deleteData(data.id, sessionStorage.getItem('token')).subscribe(\n      res => this.favser.deleteDataUser(sessionStorage.getItem('username'), data.id, sessionStorage.getItem('token')).subscribe(\n        res => console.log(),\n        err => console.log(err)\n      ),\n      err => {\n        if (err.statusText === \"OK\") {\n          this.favser.deleteDataUser(sessionStorage.getItem('username'), data.name, sessionStorage.getItem('token')).subscribe(\n            res => this.route.tohelp(),\n            err => console.log(err)\n          )\n        }\n      }\n    )\n  }\n\n}\n","<!-- display all the favourite players and have a button in each card to delete them -->\n\n<div class=\"cardContainer\">\n\n   <mat-card class=\"card\" *ngFor=\"let data of list\">\n\n      <mat-card-title>\n         {{data.name}}\n      </mat-card-title>\n\n      <mat-card-subtitle>\n         {{data.dateOfBirth}}\n      </mat-card-subtitle>\n\n      <img mat-card-image height=\"250px\" [src]=\"data.playerImg\">\n\n      <mat-card-content>\n         <b>Conutry :</b> {{data.country}}<br>\n         <b>Teams : </b>{{data.placeOfBirth}}<br>\n         <b>Role : </b>{{data.role}}\n      </mat-card-content>\n\n      <mat-card-actions>\n         <button *ngIf=\"data.status\" mat-icon-button class=\"button-pos\">\n            <mat-icon>favorite</mat-icon>\n         </button>\n\n         <button *ngIf=\"!data.status\" mat-icon-button color=\"warn\" class=\"button-pos\" (click)=\"removeFromFav(data)\">\n            <mat-icon>favorite</mat-icon>\n         </button>\n      </mat-card-actions>\n   </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"foot\" color=\"primary\">\n   <mat-toolbar-row>\n       <div class=\"foot-text\">Follow us on : </div>\n       <a href=\"https://www.facebook.com/\"><img class=\"icons\" src=\"../../assets/fb.png\"></a>\n       <a href=\"https://www.instagram.com/\"><img class=\"icons\" src=\"../../assets/insta.png\"></a>\n       <a href=\"https://www.linkedin.com/\"><img class=\"icons\" src=\"../../assets/linkedin.png\"></a>\n       <a href=\"https://www.twitter.com/\"><img class=\"icons\" src=\"../../assets/twitter.png\"></a>\n       <div class=\"copy\">@Copyrights 2022 CPlayer-Team StackRoute. All rights reserved</div>\n   </mat-toolbar-row>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n   <mat-toolbar-row>\n       <div class=\"heading\">Cricket Player</div>\n       <span class=\"menu-spacer\"></span>\n   </mat-toolbar-row>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\nimport { RouterService } from '../router.service';\n\n@Component({\n  selector: 'app-helper',\n  templateUrl: './helper.component.html',\n  styleUrls: ['./helper.component.css']\n})\nexport class HelperComponent implements OnInit {\n\n  constructor(private route: RouterService) { }\n\n  ngOnInit(): void {\n    this.route.back();\n  }\n\n}\n","<p>helper works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { RouterService } from '../router.service';\nimport { AuthenticationService } from '../authentication.service';\nimport { UserAuth } from '../userAuth';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  userAuth: UserAuth = new UserAuth();\n  loginflag: boolean;\n  constructor (private route: RouterService, private auth: AuthenticationService) {  }\n  ngOnInit(): void {\n    if (sessionStorage.getItem('token') != null) {\n      this.loginflag = true;\n      this.route.todashboard();\n    }\n  }\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required, Validators.minLength(8)])\n  })\n  get email() {\n    return this.loginForm.get('email');\n  }\n\n  get password() {\n    return this.loginForm.get('password');\n  }\n  logIn() {\n    this.userAuth.username = this.loginForm.value.email;\n    this.userAuth.password = this.loginForm.value.password;\n\n    this.auth.login(this.userAuth).subscribe(\n      data => {\n        this.auth.setBearerToken(data[\"Token\"]);\n        sessionStorage.setItem(\"username\", this.loginForm.value.email);\n        this.route.todashboard();\n      },\n      error => {\n        console.log(error);\n      });\n  }\n  tosignup() {\n    this.route.tosignup();\n  }\n\n}","<!-- Login form -->\n\n<app-header></app-header>\n\n<div class=\"login\"> Login Form</div>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"logIn()\">\n    <div>\n        <label for=\"email\">Email</label>\n        <input type=\"text\" placeholder=\"Enter Email\" formControlName=\"email\">\n        <small class=\"esmall\" *ngIf=\"email.invalid && (email.dirty || email.touched)\">\n            email is mandatory field\n        </small>\n    </div>\n    <div>\n        <label for=\"password\">Password</label>\n        <input type=\"password\" placeholder=\"Enter Password\" formControlName=\"password\">\n        <small *ngIf=\"password.invalid && (password.dirty || password.touched)\">\n            <small *ngIf=\"password.errors.required\">\n                password cannot be left blank\n            </small>\n            <small *ngIf=\"password.errors.minlength\">\n                password must have minimum 8characters\n            </small>\n        </small>\n    </div>\n\n    <div class=\"but\">\n        <button [disabled]=\"!loginForm.valid\" value=\"sign In\">Log In</button>\n        <!--input class=\"submit\"[disabled} = \"!loginForm.valid\" value=\"signIn\"-->\n        <button (click)=\"tosignup()\" value=\"signIn\">New User</button>\n    </div>\n</form>\n\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { RouterService } from '../router.service';\nimport { CricapiService } from '../cricapi.service';\n\n@Component({\n  selector: 'app-news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.css']\n})\nexport class NewsComponent implements OnInit {\n\n  list: Array<any>;\n\n  constructor(private route: RouterService, private newsapi: CricapiService) { }\n\n  ngOnInit(): void {\n\n    if (sessionStorage.getItem('token') == null || sessionStorage.getItem('username') == null) {\n      this.route.tologin();\n    }\n\n    this.newsapi.newsSports().subscribe(\n      res => {\n        this.list=res.articles        \n      },\n      err => console.log(err)\n    )\n\n\n  }\n\n\n\n}\n","<div class=\"cardContainer\">\n\n   <mat-card class=\"card\" *ngFor=\"let data of list\">\n\n      <mat-card-title>\n         {{data.title}}\n      </mat-card-title><br>\n\n      <a href=\"{{data.url}}\" target=\"_blank\">\n         <img width=\"500px\" mat-card-image height=\"250px\" [src]=\"data.urlToImage\">\n      </a>\n\n      <mat-card-subtitle>\n         {{data.description}}\n      </mat-card-subtitle>\n\n      <mat-card-content>\n         {{data.content}}\n      </mat-card-content>\n\n   </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { RecommendedService } from '../recommended.service';\nimport { RouterService } from '../router.service';\n\n@Component({\n  selector: 'app-recom',\n  templateUrl: './recom.component.html',\n  styleUrls: ['./recom.component.css']\n})\nexport class RecomComponent implements OnInit {\n  list: Array<any>;\n  constructor(private recomser: RecommendedService, private route: RouterService) { }\n  ngOnInit(): void {\n    if (sessionStorage.getItem('token') == null || sessionStorage.getItem('username') == null) {\n      this.route.tologin();\n    }\n    this.recomser.getData(sessionStorage.getItem('token')).subscribe(\n      res => this.list = res\n    )\n  }\n\n}\n","<!-- Show the cards of recommended players -->\n\n<div class=\"cardContainer\">\n\n   <mat-card class=\"card\" *ngFor=\"let data of list\">\n\n      <mat-card-title>\n         {{data.name}}\n      </mat-card-title>\n\n      <mat-card-subtitle>\n         {{data.dateOfBirth}}\n      </mat-card-subtitle>\n\n      <img mat-card-image height=\"250px\" [src]=\"data.playerImg\">\n\n      <mat-card-content>\n         <b>Conutry :</b> {{data.country}}<br>\n         <b>Teams : </b>{{data.placeOfBirth}}<br>\n         <b>Role : </b>{{data.role}}\n      </mat-card-content>\n   </mat-card>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Recommended } from './recommended';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecommendedService {\n  constructor(private http: HttpClient) { }\n  getData(token: string): Observable<any> {\n    return this.http.get<any>(`http://localhost:8888/api/recom`, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          console.log(userData);\n          return userData;\n        }));\n  }\n  addData(recom: Recommended, token: string): Observable<any> {\n    return this.http.post<any>(`http://localhost:8888/api/recom`, recom, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n  deleteData(pid: number, token: string): Observable<any> {\n    return this.http.delete<any>(`http://localhost:8888/api/recom?id=${pid}`, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n\n}\n","export class Recommended {\n   role: string;\n   country: string;\n   name: string;\n   placeOfBirth: string;\n   dateOfBirth: string;\n   playerImg: string;\n   pid: string;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouterService {\n  constructor(private router: Router, private location: Location) { }\n  tologin(){\n    this.router.navigate([\"/login\"])\n  }\n  tosignup(){\n    this.router.navigate([\"/signup\"])\n  }\n  todashboard(){\n    this.router.navigate([\"/dashboard\"])\n  }\n  tocontact(){\n    this.router.navigate([\"/contact\"])\n  }\n  tofav(){\n    this.router.navigate([\"/dashboard/favs\"])\n  }\n\n  tohelp(){\n    this.router.navigate([\"/dashboard/help\"])\n  }\n  tostatOpener(pid){\n    this.router.navigate(['dashboard',{\n      outlets:{\n        statOpener:['statOpener',pid,'view']\n      }\n    }])\n  }\n  back(){\n    this.location.back();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CricapiService } from '../cricapi.service';\nimport { Find } from '../find';\nimport { FavouritesService } from '../favourites.service';\nimport { Favs } from '../fav';\nimport { Recommended } from '../recommended';\nimport { RecommendedService } from '../recommended.service';\nimport { RouterService } from '../router.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n  stat: boolean;\n  config: any;\n  val: string;\n  fav: Favs = new Favs;\n  fav2: Favs;\n  recom: Recommended = new Recommended;\n  Id;\n  list: Array<Find> = [];\n  constructor(private cricapi: CricapiService, private favser: FavouritesService,\n    private recomser: RecommendedService, private route: RouterService) {\n    this.val = \"\";\n    this.config = {\n      itemsPerPage: 10,\n      currentPage: 1,\n      totalItems: this.list.length\n    };\n\n  }\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n  ngOnInit() {\n    if (sessionStorage.getItem('token') == null || sessionStorage.getItem('username') == null) {\n      this.route.tologin();\n    }\n\n  }\n  getData(val) {\n    this.cricapi.searchPlayer(val).subscribe(\n      res => {\n        this.list = res.data;\n        for (let obj of this.list) {\n          obj.status = true;\n        }\n      },\n      err => {\n        console.log(err)\n      })\n  }\n  onView(id) {\n    this.Id = id;\n    sessionStorage.setItem('fId', this.Id);\n  }\n  addToFav(data) {\n    data.status = false;\n    this.cricapi.statsPlayer(sessionStorage.getItem('fId')).subscribe(\n      (res: any) => {\n        this.fav.dateOfBirth = (res['data']['dateOfBirth']);\n        this.fav.name = res['data']['name'];\n        this.fav.placeOfBirth = res['data']['placeOfBirth'];\n        this.fav.playerImg = res['data']['playerImg'];\n        this.fav.role = res['data']['role'];\n        this.fav.status = false;\n        this.fav.country = res['data']['country'];\n        this.fav.username = sessionStorage.getItem('username');\n        this.fav.pid = (sessionStorage.getItem('fId'));\n        this.recom.dateOfBirth = (res['data']['dateOfBirth']);\n        this.recom.name = res['data']['name'];\n        this.recom.placeOfBirth = res['data']['placeOfBirth'];\n        this.recom.playerImg = res['data']['playerImg'];\n        this.recom.role = res['data']['role'];\n        this.recom.country = res['data']['country'];\n        this.recom.pid = (sessionStorage.getItem('fId'));\n\n\n        this.recomser.addData(this.recom, sessionStorage.getItem('token')).subscribe(\n          res => console.log(\"added to recom\"),\n          err => console.log(err)\n        )\n        this.favser.addData(this.fav, sessionStorage.getItem('token')).subscribe(\n          res => console.log(\"added to fav\"),\n          err => console.log(err)\n        )\n      },\n      err => console.log(err)\n    )\n  }\n  removeFromFav(data) {\n    data.status = true;\n    this.recomser.deleteData(data.pid, sessionStorage.getItem('token')).subscribe(\n      res => console.log(\"removed from fav\"),\n      err => console.log(err)\n    )\n    this.favser.deleteDataUser(sessionStorage.getItem('username'), data.name, sessionStorage.getItem('token')).subscribe(\n      res => console.log(\"removed from recom\"),\n      err => console.log(err)\n    )\n  }\n\n}\n","<!-- creating search button ad get a list of players -->\n\n<div class=\"formTaker-Expansion\">\n   <mat-form-field appearance=\"outline\">\n      <mat-label>Search Player</mat-label>\n      <input matInput placeholder=\"Please enter Name\" [(ngModel)]=\"val\">\n      <mat-hint>eg. Sachin</mat-hint>\n   </mat-form-field>\n\n   <button mat-raised-button (click)=\"getData(val)\" class=\"buttn\" color=\"primary\">Search</button>\n</div>\n\n<div class=\"cardContainer\">\n\n   <mat-card class=\"card\" style=\"background: linear-gradient(\n      rgba(255, 255, 255, 0.8), \n      rgba(255, 255, 255, 0.7)\n    ),url('../../assets/doodul.png')\" *ngFor=\"let data of list | paginate: config\">\n\n      <mat-card-title>\n         {{data.name}}\n      </mat-card-title>\n      <mat-card-subtitle>\n         Country : {{data.country}}\n      </mat-card-subtitle>\n      <!-- <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\"> -->\n      <!-- style=\"background-image: url('../../assets/doodul.png');\" -->\n\n      <mat-card-content>\n        <!-- <p> Country : {{data.country}}</p> <br> -->\n         <mat-divider style=\"width: 80%; margin-left: 10%;\"></mat-divider>\n         <p> <small  style=\"margin-top:1px; margin-bottom: 0px;\"> ID : {{data.id}}</small> </p>\n      </mat-card-content>\n\n      <mat-card-actions>\n         <button *ngIf=\"data.status\" mat-icon-button class=\"button-pos\" (click)=\"addToFav(data);onView(data.id)\">\n           <mat-icon>favorite</mat-icon>\n         </button>\n         <!-- <button *ngIf=\"data.status\" mat-icon-button class=\"button-pos\" (click)=\"onView(data.id)\">\n            <mat-icon>home</mat-icon>\n          </button> -->\n         <button *ngIf=\"!data.status\" mat-icon-button color=\"warn\" class=\"button-pos\"\n           (click)=\"removeFromFav(data)\">\n           <mat-icon>favorite</mat-icon>\n         </button>\n       </mat-card-actions>\n   </mat-card>\n</div>\n\n<div class=\"pagination\">\n   <pagination-controls (pageChange)=\"pageChanged($event)\"></pagination-controls>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { RouterService } from '../router.service';\nimport { User } from '../user';\nimport { UserAuth } from '../userAuth';\nimport { UserService } from '../user.service';\nimport { AuthenticationService } from '../authentication.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  user: User = new User();\n  userauth: UserAuth = new UserAuth();\n  constructor(private route: RouterService, private userser: UserService, private auth: AuthenticationService) {\n  }\n\n  ngOnInit(): void {\n  }\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required, Validators.minLength(8)]),\n    name: new FormControl('', [Validators.required]),\n    mobile: new FormControl('', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]),\n  })\n\n  get email() {\n    return this.loginForm.get('email');\n  }\n  get password() {\n    return this.loginForm.get('password');\n  }\n  get name() {\n    return this.loginForm.get('name');\n  }\n  get mobile() {\n    return this.loginForm.get('mobile');\n  }\n\n  signIn() {\n    this.user.mobile = this.loginForm.value.mobile;\n    this.user.username = this.loginForm.value.email;\n    this.user.name = this.loginForm.value.name;\n    this.userauth.username = this.loginForm.value.email;\n    this.userauth.password = this.loginForm.value.password;\n    this.auth.signup(this.userauth).subscribe(\n      res => console.log(),\n      err => console.log(err)\n    )\n    this.userser.signup(this.user).subscribe(\n      res => console.log(),\n      err=> console.log(err) \n    )\n    this.route.tologin();  \n  }\n  tologin() {\n    this.route.tologin();\n  }  \n  onFileChanged(event) {\n    const file = event.target.files[0];\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = (_event => {\n      this.user.image = reader.result.toString();\n    })\n  }\n}\n","<!-- Sign Up form -->\n\n<app-header></app-header>\n\n<div class=\"signup\">Sign Up Form</div>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"signIn()\">\n   <div>\n      <label for=\"email\">Email</label>\n      <input class=\"email\" type=\"text\" placeholder=\"  Enter email\" formControlName=\"email\"><br>\n      <small class=\"err\" *ngIf=\"email.invalid && (email.dirty || email.touched)\">\n         Email is mandatory field\n      </small>\n   </div>\n   <div>\n      <label for=\"password\">Password</label>\n      <input class=\"password\" type=\"password\" placeholder=\"  Enter password\" formControlName=\"password\"><br>\n      <small *ngIf=\"password.invalid && (password.dirty || password.touched)\">\n         <small class=\"err\" *ngIf=\"password.errors.required\">\n            Password cannot be left blank\n         </small>\n         <small class=\"err\" *ngIf=\"password.errors.minlength\">\n            Password must have minimum 8characters\n         </small>\n      </small>\n   </div>\n   <div>\n      <label for=\"name\">Name</label>\n      <input class=\"name\" type=\"text\" placeholder=\"  Enter your name\" formControlName=\"name\"><br>\n      <small class=\"err\" *ngIf=\"name.invalid && (name.dirty || name.touched)\">\n         Name is mandatory field\n      </small>\n   </div>\n   <div>\n      <label for=\"mobile\">Mobile</label>\n      <input class=\"mobile\" type=\"text\" placeholder=\"  Enter your mobile\" formControlName=\"mobile\"><br>\n      <small class=\"err\" *ngIf=\"mobile.invalid && (mobile.dirty || mobile.touched)\">\n         Enter a valid 10 digit Mobile Number\n      </small>\n   </div>\n\n   <div class=\"image-upload-container btn btn-bwm\">\n      <label>Image</label>\n      <input #imageInput class=\"image\" type=\"file\" (change)=\"onFileChanged($event)\">\n   </div>\n\n   <div class=\"but\">\n      <button [disabled]=\"!loginForm.valid\" value=\"sign Up\">Sign Up</button>\n      <!--input class=\"submit\"[disabled} = \"!loginForm.valid\" value=\"signIn\"-->\n      <button (click)=\"tologin()\" value=\"log In\">Already Registered</button>\n   </div>\n</form>\n\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { RouterService } from '../router.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { StatviewComponent } from '../statview/statview.component';\n\n@Component({\n  selector: 'app-stat-opener',\n  templateUrl: './stat-opener.component.html',\n  styleUrls: ['./stat-opener.component.css']\n})\nexport class StatOpenerComponent implements OnInit {\n  constructor(private dialogue: MatDialog, private route: RouterService, private actiRoute: ActivatedRoute) {\n    const id = +this.actiRoute.snapshot.paramMap.get('pid');\n    this.dialogue.open(StatviewComponent, {\n      data: {\n        pid: id\n      }\n    }).afterClosed().subscribe(\n      result => {\n        this.route.back();\n      }\n    )\n  }\n\n  ngOnInit(): void {\n\n    if (sessionStorage.getItem('token') == null || sessionStorage.getItem('username') == null) {\n      this.route.tologin();\n    }\n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Find } from '../find';\nimport { CricapiService } from '../cricapi.service';\nimport { RouterService } from '../router.service';\n\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.css']\n})\nexport class StatsComponent implements OnInit {\n  config: any;\n  val: string;\n  list: Array<Find> = [];\n  Id;\n\n\n  constructor(private cricapi: CricapiService, private route: RouterService) {\n    this.val = \"\";\n    this.config = {\n      itemsPerPage: 10,\n      currentPage: 1,\n      totalItems: this.list.length\n    };\n\n  }\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n  ngOnInit() {\n    if (sessionStorage.getItem('token') == null || sessionStorage.getItem('username') == null) {\n      this.route.tologin();\n    }\n  }\n  onView(id) {\n    this.Id = id;\n    sessionStorage.setItem('pId', this.Id);\n  }\n  getData(val) {\n    this.cricapi.searchPlayer(val).subscribe(\n      res => {\n        this.list = res.data;\n        for (let obj of this.list) {\n          obj.status = true;\n        }\n      },\n      err => {\n        console.log(err);\n\n\n      })\n  }\n\n \n\n  viewStats(data) {\n    this.route.tostatOpener(data.pid);\n  }\n\n}\n","<!-- Showing the search result of players as searched by name -->\n\n<div class=\"formTaker-Expansion\">\n   <mat-form-field appearance=\"outline\">\n      <mat-label>Get Statistics</mat-label>\n      <input matInput placeholder=\"Enter Name of Player\" [(ngModel)]=\"val\">\n      <mat-hint>eg. Sachin</mat-hint>\n   </mat-form-field>\n\n   <button mat-raised-button (click)=\"getData(val)\" class=\"buttn\" color=\"primary\">Search</button>\n</div>\n\n<div class=\"cardContainer\">\n\n   <!-- <mat-card class=\"card\" *ngFor=\"let data of list | paginate: config\" (click)=\"viewStats(data)\">\n\n      <mat-card-subtitle>\n         Country : {{data.country}}\n      </mat-card-subtitle>\n<img mat-card-image src=\"{{data.playerImg}}\" alt=\"Photo of a Shiba Inu\">\n     \n      <mat-card-content>\n         Date of Birth : {{data [0]['dateOfBirth']}} <br> <mat-divider></mat-divider>\n         Place of Birth : {{data [0]['placeOfBirth']}} <br> <mat-divider></mat-divider>\n         Country : {{data[0]['country']}} <br> <mat-divider></mat-divider>\n         Date of Birth : {{data.dateOfBirth}} <br> <mat-divider></mat-divider>\n\n         Role : {{data[0]['role']}}<br> <mat-divider></mat-divider>\n <mat-divider style=\"width: 80%; margin-left: 10%;\"></mat-divider>\n         <p> <small  style=\"margin-top:1px; margin-bottom: 0px;\"> ID : {{data.id}}</small> </p>\n\n      </mat-card-content>\n   \n     \n\n   </mat-card>\n</div> -->\n\n\n\n\n<mat-card class=\"card\" style=\"background: linear-gradient(\n      rgba(255, 255, 255, 0.8), \n      rgba(255, 255, 255, 0.7)\n    ),url('../../assets/doodul.png')\" *ngFor=\"let data of list | paginate: config\">\n\n      <mat-card-title>\n         {{data.name}}\n      </mat-card-title>\n      <mat-card-subtitle>\n         Country : {{data.country}}\n      </mat-card-subtitle>\n      <!-- <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\"> -->\n      <!-- style=\"background-image: url('../../assets/doodul.png');\" -->\n\n      <mat-card-content>\n        <!-- <p> Country : {{data.country}}</p> <br> -->\n         <mat-divider style=\"width: 80%; margin-left: 10%;\"></mat-divider>\n         <p> <small  style=\"margin-top:1px; margin-bottom: 0px;\"> ID : {{data.id}}</small> </p>\n      </mat-card-content>\n\n      <mat-card-actions>\n        \n         <!-- <button *ngIf=\"data.status\" mat-icon-button class=\"button-pos\" (click)=\"onView(data.id)\"> -->\n            <button *ngIf=\"data.status\" mat-icon-button class=\"button-pos\" (click)=\"onView(data.id); viewStats(data)\">\n\n            <mat-icon>home</mat-icon>\n          </button>\n        \n       </mat-card-actions>\n   </mat-card>\n</div>\n\n\n\n\n\n<div class=\"pagination\">\n   <pagination-controls (pageChange)=\"pageChanged($event)\"></pagination-controls>\n</div>\n\n<script>console.log(this.list.role)</script>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { StatOpenerComponent } from '../stat-opener/stat-opener.component';\nimport { CricapiService } from '../cricapi.service';\nimport { RouterService } from '../router.service';\nimport { Find } from '../find';\nimport { Favs } from '../fav';\n\n@Component({\n  selector: 'app-statview',\n  templateUrl: './statview.component.html',\n  styleUrls: ['./statview.component.css']\n})\nexport class StatviewComponent implements OnInit {\n  stat :any;\n  constructor(private diaRef: MatDialogRef<StatOpenerComponent>, @Inject(MAT_DIALOG_DATA) private data: any,\n   private cric: CricapiService, private route :RouterService) { \n   }\n\n  ngOnInit(): void {\n\n    if (sessionStorage.getItem('token') == null || sessionStorage.getItem('username') == null) {\n      this.route.tologin();\n    }\n    console.log(\"Call the Cric Player ApI based on PID to get player stats.\");\n    this.cric.statsPlayer(sessionStorage.getItem('pId')).subscribe(\n      res => {\n        this.stat = res['data']\n      },\n      err => console.log(err)\n    )\n  }\n\n}\n","<div class=\"\" style=\"text-align:center\">\n   <img height=\"200px\" src={{stat.playerImg}}>\n   <h1><b>{{stat.name}}</b> </h1>\n</div>\n<div></div>\n<div class=\"\">\n   <h3 class=\"age\"> <b> Date of Birth :</b> {{(stat.dateOfBirth).slice(0,10)}}</h3>\n   <h3><b>Born :</b> {{stat.placeOfBirth}}</h3>\n   <h3><b>Country :</b> {{stat.country}}</h3>\n   <h3><b>Role :</b> {{stat.role}}</h3>\n   <h3><b>Batting Style :</b> {{stat.battingStyle}}</h3>\n   <h3><b>Bowling Style :</b> {{stat.bowlingStyle}}</h3>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { RouterService } from './router.service';\nimport { User } from './user';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private httpClient: HttpClient) { }\n  public signup(user: User) {\n    return this.httpClient.post<User>(\"http://localhost:8888/api/user\", user)\n  }\n  public getdetails(username: string, token: string): Observable<any> {\n    return this.httpClient.get<any>(`http://localhost:8888/api/user/pro/token?username=${username}`, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n  public modifyUser(user: User, token: string): Observable<any> {\n    return this.httpClient.put<any>(`http://localhost:8888/api/user/pro/token?username=${user.username}`, user, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n\n  public deleteUser(username: string, token: string): Observable<any> {\n    return this.httpClient.delete<any>(`http://localhost:8888/api/user/pro/token?username=${username}`, {\n      headers: new HttpHeaders().set(\"Authorization\", `Bearer ${token}`)\n    }).pipe(\n      map(\n        userData => {\n          return userData;\n        }));\n  }\n\n}","export class User{\n   username: string;\n   password : string;\n   name: string;\n   image: string;\n   mobile: string;\n }\n","export class UserAuth{\n   username: string;\n   password: string;\n}\n","export const environment = {\n  production: false\n};","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}